{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/uditasharma/React Projects/edupay-ui/src/components/loginFormComponent.jsx\";\nimport React from 'react';\nimport InputFieldComponent from './inputFieldComponent';\nimport SubmitButtonComponent from './submitButton';\nimport UserStore from '../stores/userStore';\nimport { ADMIN_HOME } from \"../constants/pageNames\";\nimport loginImg from \"../money.svg\";\nimport \"../screens/login/style.css\";\n\nclass LoginFormComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username || !this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch('/login', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success == false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"base-container\",\n      ref: this.props.containerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logoImg\",\n            src: loginImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputFieldComponent, {\n              type: \"text\",\n              placeholder: \"Username\",\n              value: this.state.username ? this.state.username : '',\n              onChange: val => this.setInputValue('username', val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputFieldComponent, {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: this.state.password ? this.state.password : '',\n              onChange: val => this.setInputValue('password', val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(SubmitButtonComponent, {\n          text: \"Login\",\n          disabled: this.state.buttonDisabled,\n          onClick: () => this.doLogin()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default LoginFormComponent;","map":{"version":3,"sources":["/Users/uditasharma/React Projects/edupay-ui/src/components/loginFormComponent.jsx"],"names":["React","InputFieldComponent","SubmitButtonComponent","UserStore","ADMIN_HOME","LoginFormComponent","Component","constructor","props","state","username","password","buttonDisabled","setInputValue","property","val","trim","setState","resetForm","doLogin","res","fetch","method","headers","body","JSON","stringify","result","json","success","isLoggedIn","alert","msg","e","console","log","render","containerRef","loginImg"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InputFieldComponent from './inputFieldComponent';\nimport SubmitButtonComponent from './submitButton'\nimport UserStore from '../stores/userStore';\nimport { ADMIN_HOME } from \"../constants/pageNames\";\nimport loginImg from \"../money.svg\"\nimport \"../screens/login/style.css\";\n\nclass LoginFormComponent extends React.Component{\n\n    constructor(props){\n         super(props);\n         this.state={\n             username: \"\",\n             password: \"\",\n             buttonDisabled: false\n         }\n    }\n    setInputValue(property,val){\n        val=val.trim();\n        this.setState({\n            [property]:val\n        })\n    }\n    resetForm(){\n        this.setState({\n            username: '',\n            password: '',\n            buttonDisabled: false\n        })\n    }\n\n    async doLogin(){\n\n        if(!this.state.username || !this.state.password){\n            return;\n        }\n        this.setState({\n            buttonDisabled: true\n        })\n\n        try{\n            let res = await fetch('/login',{\n                method: 'post',\n                headers:{\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password\n                })\n            });\n\n            let result = await res.json();\n            if(result&& result.success){\n                UserStore.isLoggedIn=true;\n                UserStore.username=result.username;\n            }else if(result && result.success == false){\n                this.resetForm();\n                alert(result.msg);\n            }\n        }catch(e){\n            console.log(e);\n            this.resetForm();\n        }\n\n    }\n\n    render(){\n        return(\n                <div className=\"base-container\" ref={this.props.containerRef}>\n                    <div className=\"header\">\n                        Login\n                    </div>\n                    <div className=\"content\">\n                        <div className=\"image\">\n                        <img className='logoImg' src={loginImg} />\n                        </div>\n                        <div className=\"form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <InputFieldComponent\n                                type='text'\n                                placeholder='Username'\n                                value={this.state.username ? this.state.username : '' }\n                                onChange={ (val) => this.setInputValue('username',val)}\n                            />\n                            {/* <input type=\"text\" name=\"username\" placeholder=\"username\" /> */}\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <InputFieldComponent\n                                type='password'\n                                placeholder='Password'\n                                value={this.state.password ? this.state.password : '' }\n                                onChange={ (val) => this.setInputValue('password',val)}\n                            />\n                            {/* <input type=\"password\" name=\"password\" placeholder=\"password\" /> */}\n                        </div>\n                        </div>\n                    </div>\n                    <div className=\"footer\">\n                        <SubmitButtonComponent\n                            text='Login'\n                            disabled={this.state.buttonDisabled}\n                            onClick={ () => this.doLogin() }\n                        />\n                        {/* <button type=\"button\" className=\"btn\" onClick={()=>{this.props.history.push(ADMIN_HOME)}}>\n                        Login\n                        </button> */}\n                    </div>\n                </div>\n        );\n    }\n\n}\n\nexport default LoginFormComponent;"]},"metadata":{},"sourceType":"module"}