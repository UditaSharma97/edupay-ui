{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/uditasharma/React Projects/edupay-ui/src/screens/SignInScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withNavigation } from 'react-navigation'; //import Toast from 'react-native-simple-toast';\n\nimport { AsyncStorage } from 'AsyncStorage'; //import {Text, View, Image, StyleSheet, AsyncStorage} from 'react-native';\n\nimport InputComponent from '../components/InputComponent';\nimport ButtonActionComponent from '../components/ButtonActionComponent';\nimport TextComponent from '../components/TextComponent';\nimport ApiConnect from '../connections/ApiConnect';\nimport styles from '../appStyles.module.css';\nimport { USERNAME_REQUIRED_TEXT, PASSWORD_REQUIRED_TEXT, HOME_SCREEN, USERNAME_PLACEHOLDER_TEXT, PASSWORD_PLACEHOLDER_TEXT, SIGN_IN_TEXT, NEW_PROFILE_TEXT, JOIN_NOW_TEXT, JOIN_NOW_SCREEN, SOME_ERROR_OCCURED_TEXT } from '../constants/StringConstants'; //import {APP_LOGO_PATH} from '../constants/ResourceConstants';\n\nconst SignInScreen = ({\n  navigation\n}) => {\n  _s();\n\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [userNameError, setUserNameError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [responseError, setResponseError] = useState(''); ///////////////////////////////////////////////////// Validation Logic Start\n\n  validateCredentials = async () => {\n    setUserNameError('');\n    setPasswordError('');\n    setResponseError('');\n\n    if (!userName) {\n      setUserNameError(USERNAME_REQUIRED_TEXT);\n    } else if (!password) {\n      setPasswordError(PASSWORD_REQUIRED_TEXT);\n    } else if (userName && password) {\n      await ApiConnect.post('/signIn', {\n        userName,\n        password\n      }).then(async result => {\n        const response = result.data; //console.log(response);\n\n        if (response.token) {\n          await AsyncStorage.setItem('TOKEN', response.token); //Toast.show(response.message, Toast.SHORT);\n\n          navigation.navigate(HOME_SCREEN);\n        } else {\n          setResponseError(response.message);\n        }\n      }).catch(error => setResponseError(SOME_ERROR_OCCURED_TEXT));\n    }\n  }; ///////////////////////////////////////////////////// Validation Logic End\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.viewStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.imageStyle //source= {require('../resources/AppLogo.png')}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputComponent, {\n      placeholderText: `${USERNAME_PLACEHOLDER_TEXT}`,\n      padding: 10,\n      borderWidth: 3,\n      borderColor: \"black\",\n      fontSize: 20,\n      onChangeText: userName => {\n        setResponseError('');\n        setUserName(userName);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), userNameError && !userName ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.errorTextStyle,\n      children: userNameError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(InputComponent, {\n      placeholderText: `${PASSWORD_PLACEHOLDER_TEXT}`,\n      padding: 10,\n      borderWidth: 3,\n      borderColor: \"black\",\n      fontSize: 20,\n      isHiddenText: true,\n      onChangeText: password => {\n        setResponseError('');\n        setPassword(password);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), passwordError && !password ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.errorTextStyle,\n      children: passwordError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(ButtonActionComponent, {\n      buttonTitle: `${SIGN_IN_TEXT}`,\n      onPress: validateCredentials,\n      buttonColor: \"rgb(204, 204, 255)\",\n      marginTop: 30,\n      marginLeft: 50,\n      marginRight: 50,\n      marginBottom: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), responseError ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      classsname: styles.errorTextStyle,\n      style: {\n        alignSelf: 'center',\n        marginLeft: '15%',\n        marginBottom: '5%'\n      },\n      children: responseError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(TextComponent, {\n      displayText: `${NEW_PROFILE_TEXT}`,\n      navigationText: `${JOIN_NOW_TEXT}`,\n      onPress: () => navigation.navigate(JOIN_NOW_SCREEN)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignInScreen, \"E8+PXAdYyOD6xQCZAPZfqjYvydQ=\");\n\n_c = SignInScreen;\n\nSignInScreen.navigationOptions = () => {\n  return {\n    title: SIGN_IN_TEXT,\n    header: () => false\n  };\n};\n\nexport default _c2 = withNavigation(SignInScreen);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignInScreen\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/uditasharma/React Projects/edupay-ui/src/screens/SignInScreen.js"],"names":["React","useState","withNavigation","AsyncStorage","InputComponent","ButtonActionComponent","TextComponent","ApiConnect","styles","USERNAME_REQUIRED_TEXT","PASSWORD_REQUIRED_TEXT","HOME_SCREEN","USERNAME_PLACEHOLDER_TEXT","PASSWORD_PLACEHOLDER_TEXT","SIGN_IN_TEXT","NEW_PROFILE_TEXT","JOIN_NOW_TEXT","JOIN_NOW_SCREEN","SOME_ERROR_OCCURED_TEXT","SignInScreen","navigation","userName","setUserName","password","setPassword","userNameError","setUserNameError","passwordError","setPasswordError","responseError","setResponseError","validateCredentials","post","then","result","response","data","token","setItem","navigate","message","catch","error","viewStyle","imageStyle","errorTextStyle","alignSelf","marginLeft","marginBottom","navigationOptions","title","header"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {withNavigation} from 'react-navigation';\n//import Toast from 'react-native-simple-toast';\nimport { AsyncStorage } from 'AsyncStorage';\n//import {Text, View, Image, StyleSheet, AsyncStorage} from 'react-native';\nimport InputComponent from '../components/InputComponent';\nimport ButtonActionComponent from '../components/ButtonActionComponent';\nimport TextComponent from '../components/TextComponent';\nimport ApiConnect from '../connections/ApiConnect';\nimport styles from '../appStyles.module.css';\nimport {USERNAME_REQUIRED_TEXT, PASSWORD_REQUIRED_TEXT,\n        HOME_SCREEN, USERNAME_PLACEHOLDER_TEXT,\n        PASSWORD_PLACEHOLDER_TEXT, SIGN_IN_TEXT,\n        NEW_PROFILE_TEXT, JOIN_NOW_TEXT,\n        JOIN_NOW_SCREEN, SOME_ERROR_OCCURED_TEXT\n      } from '../constants/StringConstants';\n//import {APP_LOGO_PATH} from '../constants/ResourceConstants';\n\nconst SignInScreen= ({navigation})=> {\n\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [userNameError, setUserNameError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [responseError, setResponseError]= useState('');\n\n  ///////////////////////////////////////////////////// Validation Logic Start\n  validateCredentials= async()=> {\n    setUserNameError('');\n    setPasswordError('');\n    setResponseError('');\n\n    if(!userName){\n      setUserNameError(USERNAME_REQUIRED_TEXT);\n    }\n    else if(!password){\n      setPasswordError(PASSWORD_REQUIRED_TEXT);\n    }\n    else if(userName && password){\n      await ApiConnect.post('/signIn', {userName, password})\n                      .then(async(result)=> {\n                            const response= result.data;\n                                           //console.log(response);\n                            if(response.token){\n                               await AsyncStorage.setItem('TOKEN', response.token);\n                               //Toast.show(response.message, Toast.SHORT);\n                               navigation.navigate(HOME_SCREEN);\n                            }\n                            else{\n                               setResponseError(response.message);\n                            }\n                       })\n                      .catch((error)=> setResponseError(SOME_ERROR_OCCURED_TEXT));\n    }\n  }\n  ///////////////////////////////////////////////////// Validation Logic End\n  return (\n    <div className= {styles.viewStyle}>\n      <img\n        className= {styles.imageStyle}\n        //source= {require('../resources/AppLogo.png')}\n      />\n      <InputComponent\n        placeholderText= {`${USERNAME_PLACEHOLDER_TEXT}`}\n        padding= {10}\n        borderWidth= {3}\n        borderColor= 'black'\n        fontSize= {20}\n        onChangeText= {(userName)=> {\n                        setResponseError('');\n                        setUserName(userName);\n                      }}\n      />\n      {userNameError && !userName ?\n        <h1 className= {styles.errorTextStyle}>\n          {userNameError}\n        </h1>\n          : null\n      }\n      <InputComponent\n        placeholderText= {`${PASSWORD_PLACEHOLDER_TEXT}`}\n        padding= {10}\n        borderWidth= {3}\n        borderColor= 'black'\n        fontSize= {20}\n        isHiddenText\n        onChangeText= {(password)=> {\n                        setResponseError('');\n                        setPassword(password);\n                      }}\n      />\n      {passwordError && !password ?\n        <h1 className= {styles.errorTextStyle}>\n          {passwordError}\n        </h1>\n          : null\n      }\n      <ButtonActionComponent\n        buttonTitle= {`${SIGN_IN_TEXT}`}\n        onPress= {validateCredentials}\n        buttonColor= 'rgb(204, 204, 255)'\n        marginTop= {30}\n        marginLeft= {50}\n        marginRight= {50}\n        marginBottom= {20}\n      />\n      {responseError ?\n        <h1 classsname={styles.errorTextStyle} style= {{alignSelf: 'center', marginLeft: '15%', marginBottom: '5%'}}>\n          {responseError}\n        </h1>\n          : null\n      }\n      <TextComponent\n        displayText= {`${NEW_PROFILE_TEXT}`}\n        navigationText= {`${JOIN_NOW_TEXT}`}\n        onPress= {()=> navigation.navigate(JOIN_NOW_SCREEN)}\n      />\n    </div>\n  )\n}\nSignInScreen.navigationOptions= ()=> {\n  return {\n    title: SIGN_IN_TEXT,\n    header: ()=> false\n  };\n};\n\nexport default withNavigation(SignInScreen);\n"]},"metadata":{},"sourceType":"module"}